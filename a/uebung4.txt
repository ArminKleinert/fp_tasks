
AlgorithmenundProgrammieren1FunktionaleProgrammierung-Übungsklausur-Punkte:A1:30,A2:20,A3:20,A4:20,A5:10,A6:20Punkte:                                         /12010.02.2012Hinweis:GebenSiebeial  lenverwendetenFunktionendieSignaturenan.VielErfolg!1Haskell-la-vista!(10+10+10=30Punkte)1.1FunktionenhöhererOrdnung(10Teilpunkte)Schreib enSieunterVerwendungdermapundfoldrFunktioneneineFunktionsumQuad,dieb eiEingab eeinesganzzahligenp ositivenWertsn,dieSummealleQuadratzahlenvon1bisnb erech-net.1.2KlassenundInstanzen(10Teilpunkte)SeienzweiverschiedenealgebraischeDatentyp en,einerfürdieDarstellungdernatürlichenZahlen(N)undeinerfürdieDarstellungderganzenZahlen(Z)gegeb en:data            N            =            Zero            |            S            (N)            deriving            (Show)data            Z            =            Z            (N,N)                                                                        deriving            (Show)Erklärung:WennadieZahlxdarstelltundbdieZahlydarstellt,dannstelltZ(a,b)dieZahlx−ydar.Beispiele:Mit            dem            Datentyp            N            kann            man            Zahlen            wie            folgt            darstellen:3            =            S(S(S(Zero)))7            =            S(S(S(S(S(S(S(Zero)))))))Mit            dem            Datentyp            Z            kann            man            Zahlen            wie            folgt            darstellen:3            =            Z            (            S(S(S(Zero)))            ,            Zero            )3            =            Z            (            S(S(S(S(Zero))))            ,            S(Zero)            )-2            =            Z            (            Zero            ,            S(S(Zero))            )-2            =            Z            (            S(S(Zero))            ,            S(S(S(S(Zero))))            )Schreib enSiedieTyp-KlasseRechnen,dieIhnendieOp erationAdditionb ereitstelltundimple-mentierenSiejeweilseineInstanzfürjedenalgebraischenDatentyp en.1
1.3Typ-Inferenz(10Teilpunkte)EsseienfolgendeFunktionssignaturenb ekannt.map                                                ::            (a            ->            b)            ->            [a]            ->            [b]sum                                                ::            (Num            a)            =>            [a]            ->            alength            ::            [a]            ->            Intshow                                    ::            (Show            a)            =>            a            ->            StringBestimmenSiedenTypderfolgendenFunktionenundb egründenSieIhrErgebnis.f            =            sum            .            map            sumg            =            map            (show            .            length)2Datenbank(20Punkte)Schreib enSieeinModulSimpleDB,daseinenalgebraischenDatentypDatenbankverwendetumeineeinfacheDatenbankzusimulieren.EineDatenbankisteineListevon2-Tup eln.Jedesdieser2-Tup elhatdieForm:(key,            [value1,            value2,            ...            ,            valuen]),wob ein≥1undjederSchlüsseleinzigartigseinmuss(Primärschlüssel).Üb erlegenSiesichgeeigneteTypklassenfürdieTyp enderSchlüsselundderWerte.EssollenfolgendeFunktionenimplementiertwerden:•createErzeugteineleereDatenbank.DerRückgabewertisteineDatenbank.•select            db            keyDieseFunktiongibtalleWertzurück,dieeinemSchlüsselineinerDatenbankzugeordnetsind.FallsderSchlüsselnichtexistiertwirdeineleereListeausgegeb en.FallsderSchlüsselexistiertwirdeineListemitallenWerten,diediesemSchlüsselzu-geordnetsind,zurückgegeb en.DerRückgabewertisteineListevonWerten.•update            db            key            valueDieseFunktionfügteinerDatenbankeinenSchlüsseleintragmitzugeordnetemWerthinzu.FallsderSchlüsselexistiertundderWertno chnichtdemSchlüsselzugeordnetist,wirdderWertdemSchlüsselzugeordnet.FallsderSchlüsselexistiertundderWertb ereitsdemSchlüsselzugeordnetist,wirdnichtsverändert.FallsderSchlüsselnichtexistiertwirddiesererzeugtundderWertdiesemzugeordnet.DerRückgabewertisteineDatenbank.•drop            db            key            valueDieseFunktionlöschtauseinerDatenbankeinenWert,dereinemSchlüsselzugeordnetwar.FallsderSchlüsselo derderWertnichtexistiertwirdeinFehlerausgegeb en.FallsderSchlüsselexistiertwirdderWertausderZuordnungzumSchlüsselentfernt.FallsderSchlüsselexistiertundnurno chderangegeb eneWertalseinzigerWertdemSchlüsselzugeordnetist,wirdderSchlüsseleb enfallsausderDatenbankentfernt.DerRückgabewertisteineDatenbank.Tipp:HilfreicheFunktionensindtakeWhile,dropWhileundfilter.2
3Sortieren+Laufzeit(10+10=20Punkte)3.1SortierendurchEinfügen(10Teilpunkte)ImplementierenSiedenInsertion-Sort-Algorithmus.3.2Laufzeit(10Teilpunkte)BestimmenSiedieLaufzeitIhrerImplementierung.Esreicht,wennSiedieLaufzeitinO-Notationangebenunddieseverbalbegründen.4StrukturelleInduktion(10+10=20Punkte)4.1Bäume(10Teilpunkte)SeifolgenderalgebraischerDatentypundfolgendeFunktiongegeb en:data            Baum            =            Blatt            Int            |            Knoten            Baum            Baumderiving            (Show)--            wendet            die            Funktion            f            auf            jedes            Element            des            Baumes            anmapTree            ::            (Int            ->            Int)            ->            Baum            ->            BaummapTree            f            (Blatt            x)                                                                        =            Blatt            (f            x)                                                                                                                                                                                                                                                                                                                                     --            mapT.1mapTree            f            (Knoten            lB            rB)            =            Knoten            (mapTree            f            lB)            (mapTree            f            rB)                        --            mapT.2BeweisenSiemitstrukturellerInduktionfolgendeBehauptung:mapTree            id            baum            =            id            baum4.2Listen(10Teilpunkte)SeienfolgendeGleichungengegeb en:++.1                        :                                                []                        ++            ys                                                                                    =            ys++.2                        :            (x:xs)            ++            ys                                                                                    =            x:(xs            ++            ys)rev.1            :            reverse            []                                                                                                            =            []rev.2            :            reverse            (x:xs)                                                            =            reverse            xs            ++            [x]rev.3            :            reverse            (xs            ++            ys)            =            (reverse            ys)            ++            (reverse            xs)BeweisenSiemitstrukturellerInduktionfolgendeBehauptung:reverse            (reverse            xs)            =            xs3
5PrimitiveRekursion(10Punkte)Rekursionsschema:R(0,x1,...,xm) =g(x1,...,xm)R(S(n),x1,...,xm) =h(R(n,x1,...,xm),n,x1,...,xm)ZeigenSie,dassdieFunktionisOdd(EinPrädikat,dasprüftobeineZahlungeradeist.DasErgebnisist1wenndieZahlungeradeistund0sonst.)primitiv-Rekursivist.SiedürfennurdieGrundfunktionenSundZvoraussetzen,dasheiÿt,alleFunktiondieSieansonstenfürIhrenBeweisverwendenmüssenSieeb enfallsb eweisen.6λ-Kalkül(5+5+10=20Punkte)6.1FreieundgebundeneAusdrücke(5Teilpunkte)BestimmenSiediefreienundgebundenenVariablenimfolgendenAusdruckundgeb enSiedie-seexplizitan.BenennenSiediegebundenenVariablensoum,dassinjedemAusdruckalleλ-AbstraktionenverschiedeneVariablenbinden.(λab.(λab.(λc.(λab.abc))ab(cc))(λab.a)(λac.c(c(a))))6.2λ-Ausdruckreduzieren(5Teilpunkte)(λa.a(λab.b)(λa.a(λab.b)(λab.a))(λab.b))(λab.ab)6.3λ-Ausdruckerstellen(10Teilpunkte)Schreib enSieeinenλ-Ausdruck,derrekursivdieQuadrateallernatürlichenZahlenvon0bisnaddiert.Siekönnendab eidiefolgendenFunktionenalsgegeb envoraussetzen:•A≡Addition(Präxnotation)•M≡Multiplikation(Präxnotation)•P≡Vorgänger•Y≡Fixpunktop erator•Z≡Vergleichauf04
