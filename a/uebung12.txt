
1.Aufgabe (2 Punkte)Betrachten Sie folgende Haskell-Funktionsdefinition, die überprüfen soll, ob die eingegebene Zahl n eine ungerade Zahl ist: ungerade :: Integer -> Boolungerade n = rem n 2 == 1 a) Warum ist diese Funktionsdefinition inkorrekt?  b) Geben Sie eine korrekte Funktionsdefinition. 2. Aufgabe (10 Punkte)Nehmen Sie an, wir haben folgende Datentyp-Synonyme definiert, um Kreis-Objekte im Haskell zu modellieren: typeCenter   = (Double, Double)  -- Mittelpunkt eines Kreisestype Radius  = DoubletypeCircle   = (Center, Radius)     -- Mittelpunkt und Radius eines KreisesDefinieren Sie, unter Verwendung dieser Datentyp-Synonyme, folgende Funktionen: area :: Circle -> Doubleperimeter :: Circle -> Doubleequal :: Circle -> Circle-- Überprüft, ob die Kreise identisch sind                                                                (Position + Große)intersect :: Circle -> Circle -> Bool-- Testet, ob die Kreise sich überschneidencontain :: Circle -> Circle -> Bool-- Testet, ob der erste Kreis den zweiten                                                                 Kreis enthält Anwendungsbeispiele: intersect  ((3.0, 3.0), 2.5) ((9.5,8.0), 2.0)  => Falsecontain  ((1.0, 1.0), 6.0) ((2.0,1.0), 3.0)  => True3.Aufgabe (9 Punkte)In dieser Aufgabe sollen 3 von 5 Funktionen definiert werden, die die unten stehenden Zeichenbilder-Muster erzeugen. Seite  von 13WS 2020/2021Funktionale Programmierung 1. Übungsblatt    Prof. Dr. Margarita Esponda
rectangles :: (Int, Int, Int) -> Char         diags :: (Int, Int, Int) -> Chardiamon :: (Int, Int, Int) -> Charflag :: (Int, Int, Int) -> Char                     circle :: (Int, Int, Int) -> CharEine paintChars Funktion, so wie drei Beispielsfunktionen, sind aus der Veranstaltungsseite (siehe auf der Whiteboard-Seite unter Ressourcen -> Material) herunter zu laden.  Die paintChars Funktion darf nicht verändert werden.  Die drei zu implementierenden Funktionen bekommen jeweils als Argumente (x, y)-Koordinaten innerhalb eines Bildes und size (die Seitenlänge des Bildes) und entscheiden dann, welches Zeichen an die vorgegebenen x, y Position eingesetzt wird. Innerhalb der zu implementierenden Funktionen darf keine Rekursion verwendet werden.  Vier Bonuspunkte können erworben werden, wenn Sie statt nur drei die fünf Funktionen definieren (zwei Bonuspunkte pro Zusatzfunktion). Seite  von 23
4. Aufgabe(10 Punkte)Definieren Sie eine Funktion num2GermanWords, die eine zweistellige ganze Zahl als Argument bekommt, und die Zahl als Wort wieder zurückgibt. Anwendungsbeispiel:     num2GermanWords  0   =>  "Null" num2GermanWords 21   =>  "Einundzwanzig" num2GermanWords (-21)  =>  "minus Einundzwanzig" Wichtige Hinweise: 1)Verwenden Sie geeignete Namen für Ihre Variablen und Funktionsnamen, die den semantischen Inhalt der Variablen oder die Semantik der Funktionen wiedergeben. 2)Verwenden Sie vorgegebene Funktionsnamen, falls diese angegeben werden. 3)Kommentieren Sie Ihre Programme. 4)Verwenden Sie geeignete lokale Funktionen und Hilfsfunktionen in Ihren Funktionsdefinitionen. 5) Geben Sie für alle Funktionen die entsprechende Signatur an. Seite  von 33
